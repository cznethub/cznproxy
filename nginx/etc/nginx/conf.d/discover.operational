upstream cdp {
    server backend-xx-czn.example.org:xxxx;
}

server {
    listen      80;
    listen      [::]:80;
    server_name discover-xxx.criticalzone.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    # rewrite ^/(.*)  https://$server_name/$1 permanent;
}

server {
    listen      80;
    listen      [::]:80;
    server_name cdp-xxx.criticalzone.org;

    # Redirect all HTTP cdp requests to HTTPS discover
    location / {
        return 301 https://discover-xxx.criticalzone.org$request_uri;
    }

    # rewrite ^/(.*)  https://discover-xxx.criticalzone.org/$1 permanent;
}

server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    server_name  cdp-xxx.criticalzone.org;

    ssl_certificate           /etc/ssl/ssl.pem;
    ssl_certificate_key       /etc/ssl/ssl.key;
    ssl_protocols             TLSv1.2 TLSv1.3;

    ssl_session_cache         shared:SSL:1m;
    ssl_prefer_server_ciphers on;
    # Redirect all cdp requests to discover

    location / {
        return 301 https://discover-xxx.criticalzone.org$request_uri;
    }

    # rewrite ^/(.*)  https://discover-xxx.criticalzone.org/$1 permanent;
}

server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    server_name  discover-xxx.criticalzone.org;

    ssl_certificate           /etc/ssl/ssl.pem;
    ssl_certificate_key       /etc/ssl/ssl.key;
    ssl_protocols             TLSv1.2 TLSv1.3;

    ssl_session_cache         shared:SSL:1m;
    ssl_prefer_server_ciphers on;

    location /sockjs-node {
	proxy_set_header   Host $host;
	proxy_set_header   X-Real-IP  $remote_addr;
	proxy_set_header   X-Forwarded-For $remote_addr;
	proxy_set_header   Upgrade $http_upgrade;
	proxy_set_header   Connection "upgrade";

	proxy_redirect     off;
	proxy_http_version 1.1;
	proxy_pass         http://cdp;
    }

    location / {
	proxy_pass         http://cdp;
	proxy_set_header   X-Forwarded-For $remote_addr;
	proxy_set_header   X-Forwarded-Proto $remote_addr;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
