upstream dspfront {
    server backend-xx-czn.example.org:xxxx;
}

upstream dspback {
    server backend-xx-czn.example.org:xxxx;
}

server {
    listen      80;
    listen      [::]:80;
    server_name dsp-xxx.criticalzone.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    # rewrite ^/(.*)  https://$server_name/$1 permanent;
}

server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    server_name  dsp-xxx.criticalzone.org;

    ssl_certificate           /etc/ssl/ssl.pem;
    ssl_certificate_key       /etc/ssl/ssl.key;
    ssl_protocols             TLSv1.2 TLSv1.3;

    # recommended by Nginx: https://docs.nginx.com/nginx/deployment-guides/load-balance-third-party/apache-tomcat/
    ssl_session_cache         shared:SSL:1m;
    ssl_prefer_server_ciphers on;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # } 

    location /api {
	proxy_pass http://dspback;
    }

    location /openapi.json {
	proxy_pass http://dspback;

    }

    location /docs {
	proxy_pass http://dspback;
    }

    location /redoc {
	proxy_pass http://dspback;
    }

    location /sockjs-node {
	proxy_set_header   Host $host;
        # proxy_set_header   X-Forwarded-Host $host;
        # proxy_set_header   X-Forwarded-Server $host;
	proxy_set_header   X-Real-IP  $remote_addr;
	proxy_set_header   X-Forwarded-For $remote_addr;
        # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header   X-Forwarded-Proto $scheme;
	proxy_set_header   Upgrade $http_upgrade;
	proxy_set_header   Connection "upgrade";

	proxy_redirect     off;
	proxy_http_version 1.1;
	proxy_pass         http://dspfront;
    }

    location / {
	proxy_pass         http://dspfront;
	proxy_set_header   X-Forwarded-For $remote_addr;
	proxy_set_header   X-Forwarded-Proto $remote_addr;
        # proxy_set_header  X-Forwarded-Proto $scheme;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
